swagger: "2.0"
info:
  description: "Staffshift Agency Client Management API"
  version: "1.0.0"
  title: "Staffshift Agency Client Management Service"
  termsOfService: "https://www.staffshift.com/#terms-and-conditions"
  contact:
    name: "Staffshift team"
    url: "http://www.staffshift.com"
    email: "info@staffshift.com"
host: "localhost:3370"
basePath: "/v1"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
tags:
- name: Status
  description: "Status of this web service"
paths:
  /status:
    get:
      x-public-operation: true
      x-swagger-router-controller: "StatusDetails"
      operationId: "getSystemStatus"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "The server status will be returned"
          schema:
            $ref: "#/definitions/server_status_response"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/server_error_model"
      tags:
        - "Status"
      summary: "Gets the status of the service"
  /agency/{agency_id}/clients:
    parameters:
      - $ref: "#/parameters/page_filter"
      - $ref: "#/parameters/items_per_page_filter"
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
    get:
      x-swagger-router-controller: "AgencyClients"
      x-octophant-event: "listAgencyClients"
      operationId: "listAgencyClients"
      security:
        - jwt: []
      responses:
        200:
          description: "Gets an Agency Client"
          schema:
            $ref: "#/definitions/assign_client_consultant_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Gets an Agency Client"
      tags:
        - "Agency Client"
  /agency/{agency_id}/clients/{client_id}/events:
    parameters:
      - $ref: "#/parameters/page_filter"
      - $ref: "#/parameters/items_per_page_filter"
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
      - $ref: "#/parameters/client_id"
    get:
      x-swagger-router-controller: "AgencyClients"
      x-octophant-event: "listAgencyClientEvents"
      operationId: "listAgencyClientEvents"
      security:
        - jwt: []
      responses:
        200:
          description: "Gets an Agency Client Event Listing"
          schema:
            $ref: "#/definitions/assign_client_consultant_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Gets an Agency Client Event Listing"
      tags:
        - "Agency Client"
  /agency/{agency_id}/clients/{client_id}:
    parameters:
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
      - $ref: "#/parameters/client_id"
    get:
      x-swagger-router-controller: "AgencyClients"
      x-octophant-event: "getAgencyClient"
      operationId: "getAgencyClient"
      security:
        - jwt: []
      responses:
        200:
          description: "Gets an Agency Client"
          schema:
            $ref: "#/definitions/assign_client_consultant_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Gets an Agency Client"
      tags:
        - "Agency Client"
  /agency/{agency_id}/clients/{client_id}/consultants:
    parameters:
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
      - $ref: "#/parameters/client_id"
    post:
      x-swagger-router-controller: "AgencyClients"
      x-octophant-event: "addAgencyClientConsultant"
      operationId: "addAgencyClientConsultant"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/assign_client_consultant_payload"
      responses:
        200:
          description: "Adds an Agency Client Consultant"
          schema:
            $ref: "#/definitions/assign_client_consultant_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Adds an Agency Client Consultant"
      tags:
        - "Agency Client Consultants"
    get:
      x-swagger-router-controller: "AgencyClientConsultants"
      x-octophant-event: "listAgencyClientConsultants"
      operationId: "listAgencyClientConsultants"
      security:
        - jwt: []
      responses:
        200:
          description: "List Agency Client Consultants"
          schema:
            $ref: "#/definitions/list_agency_client_consultant_response_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "List Agency Client Consultants"
      tags:
        - "Agency Client Consultants"
  /agency/{agency_id}/clients/{client_id}/consultant/{consultant_id}:
    parameters:
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
      - $ref: "#/parameters/client_id"
      - $ref: "#/parameters/consultant_id"
    delete:
      x-swagger-router-controller: "AgencyClient"
      x-octophant-event: "removeAgencyClientConsultant"
      operationId: "removeAgencyClientConsultant"
      security:
        - jwt: []
      responses:
        200:
          description: "Removes an Agency Client Consultant"
          schema:
            $ref: "#/definitions/assign_client_consultant_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Removes an Agency Client Consultant"
      tags:
        - "Agency Client Consultants"
  /agency/{agency_id}/consultant-roles:
    parameters:
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
    post:
      x-swagger-router-controller: "Agency"
      x-octophant-event: "addAgencyConsultantRole"
      operationId: "addAgencyConsultantRole"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/add_agency_consultant_role_payload"
      responses:
        200:
          description: "Creates an Agency Consultant Role"
          schema:
            $ref: "#/definitions/add_agency_consultant_role_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Creates an Agency Consultant Role"
      tags:
        - "Agency Consultant Roles"
    get:
      x-swagger-router-controller: "Agency"
      x-octophant-event: "getAgencyConsultantRoles"
      operationId: "getAgencyConsultantRoles"
      security:
        - jwt: []
      responses:
        200:
          description: "List Agency Consultant Roles"
          schema:
            $ref: "#/definitions/add_agency_consultant_role_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "List Agency Consultant Roles"
      tags:
        - "Agency Consultant Roles"
  /agency/{agency_id}/consultant-roles/{consultant_role_id}:
    parameters:
      - $ref: "#/parameters/x_request_id"
      - $ref: "#/parameters/x_request_jwt"
      - $ref: "#/parameters/agency_id"
      - $ref: "#/parameters/consultant_role_id"
    delete:
      x-swagger-router-controller: "Agency"
      x-octophant-event: "removeAgencyConsultantRole"
      operationId: "removeAgencyConsultantRole"
      security:
        - jwt: []
      responses:
        200:
          description: "Removes an Agency Consultant Role"
          schema:
            $ref: "#/definitions/add_agency_consultant_role_payload_def"
        default:
          $ref: "#/responses/server_error_model"
      summary: "Removes an Agency Consultant Role"
      tags:
        - "Agency Consultant Roles"
parameters:
  add_agency_consultant_role_payload:
    name: add_agency_consultant_role_payload
    in: body
    required: true
    description: "The payload used to create an agency consultant role"
    schema:
      $ref: "#/definitions/add_agency_consultant_role_payload_def"
  assign_client_consultant_payload:
    name: assign_client_consultant_payload
    in: body
    required: true
    description: "The payload used to create an agency client consultant"
    schema:
      $ref: "#/definitions/assign_client_consultant_payload_def"
  x_request_id:
    name: X-Request-Id
    in: header
    description: "The request Id for the incoming request"
    type: string
  x_request_jwt:
    name: x-request-jwt
    in: header
    required: true
    type: string
    description: "The JWT Token"
  agency_id:
    name: agency_id
    in: path
    required: true
    pattern: ^[0-9a-fA-F]{24}$
    description: "Agency ID"
    type: string
  client_id:
    name: client_id
    in: path
    required: true
    pattern: ^[0-9a-fA-F]{24}$
    description: "Client ID"
    type: string
  consultant_id:
    name: consultant_id
    in: path
    required: true
    pattern: ^[0-9a-fA-F]{24}$
    description: "Consultant ID"
    type: string
  consultant_role_id:
    name: consultant_role_id
    in: path
    required: true
    pattern: ^[0-9a-fA-F]{24}$
    description: "Consultant Role ID"
    type: string
  page_filter:
    name: page
    in: query
    description: "The page number to be displayed"
    required: false
    type: integer
    default: 1
    minimum: 1
  items_per_page_filter:
    name: "items_per_page"
    in: "query"
    description: "The items per page to be displayed"
    required: false
    type: integer
    default: 25
    minimum: 1
definitions:
  list_agency_client_consultant_response_def:
    type: object
    required:
      - _id
      - agency_id
      - client_id
      - consultant_role_id
      - consultant_role_name
      - consultant_id
      - created_at
      - updated_at
    properties:
      _id:
        type: string
      agency_id:
        type: string
      client_id:
        type: string
      consultant_role_id:
        type: string
      consultant_role_name:
        type: string
      consultant_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    additionalProperties: false
  add_agency_consultant_role_payload_def:
    type: object
    required:
      - name
      - description
      - max_consultants
    properties:
      name:
        type: string
      description:
        type: string
      max_consultants:
        type: integer
        minimum: 1
    additionalProperties: false
  assign_client_consultant_payload_def:
    type: object
    required:
      - consultant_role_id
      - consultant_id
    properties:
      consultant_role_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
      consultant_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
    additionalProperties: false
  server_error_def:
    type: "object"
    required:
    - code
    - message
    properties:
      code:
        type: string
      message:
        type: string
      stack:
        type: string
  server_status_response:
    type: "object"
    required:
    - up_time
    properties:
      up_time:
        type: integer
  server_error_model:
    type: object
    required:
    - code
    - message
    properties:
      code:
        type: string
      message:
        type: string
      stack:
        type: string
responses:
  server_error_model:
    description: "Server error occurred"
    schema:
      $ref: "#/definitions/server_error_def"
securityDefinitions:
  jwt:
    type: apiKey
    name: x-request-jwt
    in: header
